// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 1 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet  restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true /p:ArtifactsPath="/app/DbfSharp.Benchmark/bin/Release/net9.0/DbfSharp.Benchmark-DefaultJob-1/" /p:OutDir="/app/DbfSharp.Benchmark/bin/Release/net9.0/DbfSharp.Benchmark-DefaultJob-1/bin/Release/net9.0/" /p:OutputPath="/app/DbfSharp.Benchmark/bin/Release/net9.0/DbfSharp.Benchmark-DefaultJob-1/bin/Release/net9.0/" /p:PublishDir="/app/DbfSharp.Benchmark/bin/Release/net9.0/DbfSharp.Benchmark-DefaultJob-1/publish/" in /app/DbfSharp.Benchmark/bin/Release/net9.0/DbfSharp.Benchmark-DefaultJob-1
// command took 2.18 sec and exited with 0
// start dotnet  build -c Release --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true /p:ArtifactsPath="/app/DbfSharp.Benchmark/bin/Release/net9.0/DbfSharp.Benchmark-DefaultJob-1/" /p:OutDir="/app/DbfSharp.Benchmark/bin/Release/net9.0/DbfSharp.Benchmark-DefaultJob-1/bin/Release/net9.0/" /p:OutputPath="/app/DbfSharp.Benchmark/bin/Release/net9.0/DbfSharp.Benchmark-DefaultJob-1/bin/Release/net9.0/" /p:PublishDir="/app/DbfSharp.Benchmark/bin/Release/net9.0/DbfSharp.Benchmark-DefaultJob-1/publish/" --output "/app/DbfSharp.Benchmark/bin/Release/net9.0/DbfSharp.Benchmark-DefaultJob-1/bin/Release/net9.0/" in /app/DbfSharp.Benchmark/bin/Release/net9.0/DbfSharp.Benchmark-DefaultJob-1
// command took 13.92 sec and exited with 0
// ***** Done, took 00:00:16 (16.19 sec)   *****
// Found 1 benchmarks:
//   DbfReaderBenchmarks.'Read all records from a DBF file': DefaultJob

// **************************
// Benchmark: DbfReaderBenchmarks.'Read all records from a DBF file': DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet DbfSharp.Benchmark-DefaultJob-1.dll --anonymousPipes 113 114 --benchmarkName DbfSharp.Benchmark.DbfReaderBenchmarks.ReadAllRecords --job Default --benchmarkId 0 in /app/DbfSharp.Benchmark/bin/Release/net9.0/DbfSharp.Benchmark-DefaultJob-1/bin/Release/net9.0
// Failed to set up high priority (Permission denied). In order to run benchmarks with high priority, make sure you have the right permissions.
// BeforeAnythingElse

// Benchmark Process Environment Information:
// BenchmarkDotNet v0.15.2
// Runtime=.NET 9.0.8 (9.0.825.36511), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 284023.00 ns, 284.0230 us/op
WorkloadJitting  1: 1 op, 80805685.00 ns, 80.8057 ms/op

WorkloadPilot    1: 2 op, 78752493.00 ns, 39.3762 ms/op
WorkloadPilot    2: 3 op, 114160566.00 ns, 38.0535 ms/op
WorkloadPilot    3: 4 op, 214528580.00 ns, 53.6321 ms/op
WorkloadPilot    4: 5 op, 257838371.00 ns, 51.5677 ms/op
WorkloadPilot    5: 6 op, 103520063.00 ns, 17.2533 ms/op
WorkloadPilot    6: 7 op, 96919518.00 ns, 13.8456 ms/op
WorkloadPilot    7: 8 op, 109971332.00 ns, 13.7464 ms/op
WorkloadPilot    8: 9 op, 78620500.00 ns, 8.7356 ms/op
WorkloadPilot    9: 10 op, 91081558.00 ns, 9.1082 ms/op
WorkloadPilot   10: 11 op, 90101684.00 ns, 8.1911 ms/op
WorkloadPilot   11: 12 op, 99941200.00 ns, 8.3284 ms/op
WorkloadPilot   12: 13 op, 107104447.00 ns, 8.2388 ms/op
WorkloadPilot   13: 14 op, 115152190.00 ns, 8.2252 ms/op
WorkloadPilot   14: 15 op, 134851764.00 ns, 8.9901 ms/op
WorkloadPilot   15: 16 op, 131492809.00 ns, 8.2183 ms/op
WorkloadPilot   16: 32 op, 261366553.00 ns, 8.1677 ms/op
WorkloadPilot   17: 64 op, 515550164.00 ns, 8.0555 ms/op

OverheadWarmup   1: 64 op, 3129.00 ns, 48.8906 ns/op
OverheadWarmup   2: 64 op, 1041.00 ns, 16.2656 ns/op
OverheadWarmup   3: 64 op, 737.00 ns, 11.5156 ns/op
OverheadWarmup   4: 64 op, 725.00 ns, 11.3281 ns/op
OverheadWarmup   5: 64 op, 708.00 ns, 11.0625 ns/op
OverheadWarmup   6: 64 op, 799.00 ns, 12.4844 ns/op
OverheadWarmup   7: 64 op, 673.00 ns, 10.5156 ns/op
OverheadWarmup   8: 64 op, 741.00 ns, 11.5781 ns/op
OverheadWarmup   9: 64 op, 690.00 ns, 10.7813 ns/op

// BeforeActualRun
WorkloadActual   1: 64 op, 517056763.00 ns, 8.0790 ms/op
WorkloadActual   2: 64 op, 772250317.00 ns, 12.0664 ms/op
WorkloadActual   3: 64 op, 762451434.00 ns, 11.9133 ms/op
WorkloadActual   4: 64 op, 511433161.00 ns, 7.9911 ms/op
WorkloadActual   5: 64 op, 514545976.00 ns, 8.0398 ms/op
WorkloadActual   6: 64 op, 519900263.00 ns, 8.1234 ms/op
WorkloadActual   7: 64 op, 515509671.00 ns, 8.0548 ms/op
WorkloadActual   8: 64 op, 512792563.00 ns, 8.0124 ms/op
WorkloadActual   9: 64 op, 516450204.00 ns, 8.0695 ms/op
WorkloadActual  10: 64 op, 510792835.00 ns, 7.9811 ms/op
WorkloadActual  11: 64 op, 516532802.00 ns, 8.0708 ms/op
WorkloadActual  12: 64 op, 510899073.00 ns, 7.9828 ms/op
WorkloadActual  13: 64 op, 508843575.00 ns, 7.9507 ms/op
WorkloadActual  14: 64 op, 512775792.00 ns, 8.0121 ms/op
WorkloadActual  15: 64 op, 510563589.00 ns, 7.9776 ms/op

// AfterActualRun
WorkloadResult   1: 64 op, 517056763.00 ns, 8.0790 ms/op
WorkloadResult   2: 64 op, 511433161.00 ns, 7.9911 ms/op
WorkloadResult   3: 64 op, 514545976.00 ns, 8.0398 ms/op
WorkloadResult   4: 64 op, 519900263.00 ns, 8.1234 ms/op
WorkloadResult   5: 64 op, 515509671.00 ns, 8.0548 ms/op
WorkloadResult   6: 64 op, 512792563.00 ns, 8.0124 ms/op
WorkloadResult   7: 64 op, 516450204.00 ns, 8.0695 ms/op
WorkloadResult   8: 64 op, 510792835.00 ns, 7.9811 ms/op
WorkloadResult   9: 64 op, 516532802.00 ns, 8.0708 ms/op
WorkloadResult  10: 64 op, 510899073.00 ns, 7.9828 ms/op
WorkloadResult  11: 64 op, 508843575.00 ns, 7.9507 ms/op
WorkloadResult  12: 64 op, 512775792.00 ns, 8.0121 ms/op
WorkloadResult  13: 64 op, 510563589.00 ns, 7.9776 ms/op
// GC:  3 1 0 81220992 64
// Threading:  0 0 64

// AfterAll
// Benchmark Process 6232 has exited with code 0.

Mean = 8.027 ms, StdErr = 0.014 ms (0.17%), N = 13, StdDev = 0.051 ms
Min = 7.951 ms, Q1 = 7.983 ms, Median = 8.012 ms, Q3 = 8.070 ms, Max = 8.123 ms
IQR = 0.087 ms, LowerFence = 7.853 ms, UpperFence = 8.200 ms
ConfidenceInterval = [7.966 ms; 8.087 ms] (CI 99.9%), Margin = 0.061 ms (0.75% of Mean)
Skewness = 0.27, Kurtosis = 1.79, MValue = 2

// ** Remained 0 (0.0 %) benchmark(s) to run. Estimated finish 2025-08-08 13:04 (0h 0m from now) **
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts/results/DbfSharp.Benchmark.DbfReaderBenchmarks-report.csv
  BenchmarkDotNet.Artifacts/results/DbfSharp.Benchmark.DbfReaderBenchmarks-report-github.md
  BenchmarkDotNet.Artifacts/results/DbfSharp.Benchmark.DbfReaderBenchmarks-report.html

// * Detailed results *
DbfReaderBenchmarks.'Read all records from a DBF file': DefaultJob
Runtime = .NET 9.0.8 (9.0.825.36511), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 8.027 ms, StdErr = 0.014 ms (0.17%), N = 13, StdDev = 0.051 ms
Min = 7.951 ms, Q1 = 7.983 ms, Median = 8.012 ms, Q3 = 8.070 ms, Max = 8.123 ms
IQR = 0.087 ms, LowerFence = 7.853 ms, UpperFence = 8.200 ms
ConfidenceInterval = [7.966 ms; 8.087 ms] (CI 99.9%), Margin = 0.061 ms (0.75% of Mean)
Skewness = 0.27, Kurtosis = 1.79, MValue = 2
-------------------- Histogram --------------------
[7.922 ms ; 8.152 ms) | @@@@@@@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet v0.15.2, Linux Ubuntu 24.04.2 LTS (Noble Numbat)
Intel Xeon Processor 2.30GHz, 1 CPU, 4 logical and 4 physical cores
.NET SDK 9.0.109
  [Host]     : .NET 9.0.8 (9.0.825.36511), X64 RyuJIT AVX2
  DefaultJob : .NET 9.0.8 (9.0.825.36511), X64 RyuJIT AVX2


| Method                             | Mean     | Error     | StdDev    | Gen0    | Gen1    | Allocated |
|----------------------------------- |---------:|----------:|----------:|--------:|--------:|----------:|
| 'Read all records from a DBF file' | 8.027 ms | 0.0606 ms | 0.0506 ms | 46.8750 | 15.6250 |   1.21 MB |

// * Hints *
Outliers
  DbfReaderBenchmarks.'Read all records from a DBF file': Default -> 2 outliers were removed (11.91 ms, 12.07 ms)

// * Legends *
  Mean      : Arithmetic mean of all measurements
  Error     : Half of 99.9% confidence interval
  StdDev    : Standard deviation of all measurements
  Gen0      : GC Generation 0 collects per 1000 operations
  Gen1      : GC Generation 1 collects per 1000 operations
  Allocated : Allocated memory per single operation (managed only, inclusive, 1KB = 1024B)
  1 ms      : 1 Millisecond (0.001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
Run time: 00:00:11 (11.95 sec), executed benchmarks: 1

Global total time: 00:00:28 (28.3 sec), executed benchmarks: 1
// * Artifacts cleanup *
Artifacts cleanup is finished
